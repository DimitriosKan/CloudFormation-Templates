---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  PrivateKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  PrivateInstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: Must be a valid EC2 instance type.

Mappings:
  AWSRegion2AMI:
    us-east-1:
      HVM64: ami-6869aa05
    us-west-2:
      HVM64: ami-7172b611
    us-west-1:
      HVM64: ami-31490d51
    eu-west-1:
      HVM64: ami-f9dd458a
    eu-central-1:
      HVM64: ami-ea26ce85
    ap-northeast-1:
      HVM64: ami-374db956
    ap-northeast-2:
      HVM64: ami-2b408b45
    ap-southeast-1:
      HVM64: ami-a59b49c6
    ap-southeast-2:
      HVM64: ami-dc361ebf
    ap-south-1:
      HVM64: ami-ffbdd790
    us-east-2:
      HVM64: ami-f6035893
    sa-east-1:
      HVM64: ami-6dd04501
    cn-north-1:
      HVM64: ami-8e6aa0e3

Resources:

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref S3PrimeRole
  S3PrimeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
  RolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PrivateInstancePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: '*'
      Roles:
        - !Ref S3PrimeRole

  # Instance setup
  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !FindInMap [AWSRegion2AMI, !Ref 'AWS::Region', HVM64]
      InstanceType: !Ref PrivateInstanceType
      KeyName: !Ref PrivateKeyName
      Monitoring: 'false'
      Tags:
      - Key: Name
        Value: Private_Trial
      NetworkInterfaces:
      - DeleteOnTermination: 'true'
        Description: Primary network interface
        DeviceIndex: 0
        SubnetId:
          !ImportValue PrivateSub
        PrivateIpAddresses:
        - PrivateIpAddress: 10.0.2.212
          Primary: 'true'
        GroupSet:
        - !ImportValue PrivateSG
        AssociatePublicIpAddress: 'true'  

  MyS3:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: newbucket20200303
  MyBucketPolicy:
     Type: AWS::S3::BucketPolicy
     Properties:
       Bucket:
         Ref: 'MyS3'
       PolicyDocument:
         Statement:
         -
           Sid: 'ThingPolicy'
           Action:
             - 's3:*'
           Effect: 'Deny'
           Resource:
             - Fn::Join:
               - ''
               -
                 - 'arn:aws:s3:::'
                 -
                   Ref: 'MyS3'

             - Fn::Join:
               - ''
               -
                 - 'arn:aws:s3:::'
                 -
                   Ref: 'MyS3'
                 - '/*'
           Principal: '*'
           Condition:
             StringNotLike:
               aws:userId:
               - !Sub '${S3PrimeRole.RoleId}:*'
               - AIDARBMTF37XSAFFX2PZN
